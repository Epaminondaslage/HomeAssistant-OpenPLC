[
    {
        "id": "312a30f75a737290",
        "type": "tab",
        "label": "Modbus",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0577dcf6d03fa48e",
        "type": "ha-sensor",
        "z": "312a30f75a737290",
        "name": "Modbus Temperature Sensor",
        "entityConfig": "0bb0be711b71d5d1",
        "version": 0,
        "state": "payload[0]",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 1500,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "001944899192de6f",
        "type": "server-state-changed",
        "z": "312a30f75a737290",
        "name": "Target Temperature",
        "server": "dd34a0b0.8b57b",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_number.modbus_target_temperature",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "3",
        "forType": "num",
        "forUnits": "seconds",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 320,
        "wires": [
            [
                "972ab8d7e8ceb822"
            ]
        ]
    },
    {
        "id": "972ab8d7e8ceb822",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Set target temperature",
        "func": "msg.payload = {\n    \"value\": [msg.payload >> 8, msg.payload & 0xFF],\n    \"register\": 'input',\n    \"address\": 0,\n    \"disableMsgOutput\": 0\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 320,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "650f374ff091eeb2",
        "type": "modbus-server",
        "z": "312a30f75a737290",
        "name": "",
        "logEnabled": false,
        "hostname": "0.0.0.0",
        "serverPort": "14502",
        "responseDelay": 100,
        "delayUnit": "ms",
        "coilsBufferSize": 10000,
        "holdingBufferSize": 10000,
        "inputBufferSize": 10000,
        "discreteBufferSize": 10000,
        "showErrors": false,
        "x": 680,
        "y": 380,
        "wires": [
            [
                "114de816ca7c007a"
            ],
            [
                "2342a1e8bd2f05b3"
            ],
            [
                "74ae70a3466afb83"
            ],
            [
                "93837862fad78a83"
            ],
            []
        ]
    },
    {
        "id": "4365dd5758fca83b",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "holding",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1440,
        "y": 140,
        "wires": []
    },
    {
        "id": "ddb7551563e8c577",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "coils ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 260,
        "wires": []
    },
    {
        "id": "6996f41d562c1c86",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "input ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1430,
        "y": 380,
        "wires": []
    },
    {
        "id": "17fd05f4aabbe528",
        "type": "inject",
        "z": "312a30f75a737290",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "Inject",
        "payload": "",
        "payloadType": "str",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "03223493075a9b0e",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Set coils register",
        "func": "msg.payload = { \n    'value': msg.payload, \n    'register': 'coils', \n    'address': 0 ,\n    'disablemsg' : 1\n} ;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "83c722306185606c",
        "type": "inject",
        "z": "312a30f75a737290",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,0]",
        "payloadType": "json",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "03223493075a9b0e"
            ]
        ]
    },
    {
        "id": "92366d36b755dae9",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Set discrete input register",
        "func": "msg.payload = { \n    'value': msg.payload, \n    'register': 'discrete', \n    'address': 0 ,\n    'disablemsg' : 1\n} ;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "a851e3a2e4aa86e4",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Set holding register",
        "func": "msg.payload = { \n    'value': msg.payload, \n    'register': 'holding', \n    'address': 0 ,\n    'disablemsg' : 1\n} ;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 200,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "4511e75d16589f3d",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Set Input register",
        "func": "msg.payload = { \n    'value': msg.payload, \n    'register': 'input', \n    'address': 0 ,\n    'disablemsg' : 1\n} ;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 260,
        "wires": [
            [
                "650f374ff091eeb2"
            ]
        ]
    },
    {
        "id": "6448244f5e764fb1",
        "type": "inject",
        "z": "312a30f75a737290",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,0]",
        "payloadType": "json",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "92366d36b755dae9"
            ]
        ]
    },
    {
        "id": "be696b34e09d4bca",
        "type": "inject",
        "z": "312a30f75a737290",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,0]",
        "payloadType": "json",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "a851e3a2e4aa86e4"
            ]
        ]
    },
    {
        "id": "9fbe427c26f72e99",
        "type": "inject",
        "z": "312a30f75a737290",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[0,0,0]",
        "payloadType": "json",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "4511e75d16589f3d"
            ]
        ]
    },
    {
        "id": "b144ef596b472183",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Get bits",
        "func": "let bits = (n, b) => [...Array(b)].map((x, i) => (n >> i) & 1);\n\nfunction getBits(n_bytes) {\n    let mylist = [];\n    for (let k = 0; k < n_bytes; k++) {\n        mylist.push(bits(msg.payload[k], 8));\n    }\n    return mylist;\n}\n\nmsg.payload = getBits(msg.N_BYTES).flat()\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 260,
        "wires": [
            [
                "ddb7551563e8c577",
                "e5acb109532db908"
            ]
        ]
    },
    {
        "id": "2342a1e8bd2f05b3",
        "type": "change",
        "z": "312a30f75a737290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "N_BYTES",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "b144ef596b472183",
                "8b9473e10870d1e7"
            ]
        ]
    },
    {
        "id": "8b9473e10870d1e7",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "coils orig",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 200,
        "wires": []
    },
    {
        "id": "6c1e13908722543e",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "discrete inputs",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 500,
        "wires": []
    },
    {
        "id": "f153811d0994ce47",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Get bits",
        "func": "let bits = (n, b) => [...Array(b)].map((x, i) => (n >> i) & 1);\n\nfunction getBits(n_bytes) {\n    let mylist = [];\n    for (let k = 0; k < n_bytes; k++) {\n        mylist.push(bits(msg.payload[k], 8));\n    }\n    return mylist;\n}\n\nmsg.payload = getBits(msg.N_BYTES).flat()\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 500,
        "wires": [
            [
                "6c1e13908722543e"
            ]
        ]
    },
    {
        "id": "93837862fad78a83",
        "type": "change",
        "z": "312a30f75a737290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "N_BYTES",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 500,
        "wires": [
            [
                "f153811d0994ce47",
                "6cf1e057c906eb39"
            ]
        ]
    },
    {
        "id": "6cf1e057c906eb39",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "discrete inputs orig",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 440,
        "wires": []
    },
    {
        "id": "47574816aa724892",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Get Registers",
        "func": "function getRegisters(n_registers) {\n    let mylist = [];\n    for (let k = 0; k < n_registers; k++) {\n        (msg.payload[0] << 8) + msg.payload[1]\n        mylist.push((msg.payload[k*2] << 8) + msg.payload[k*2+1]);\n    }\n    return mylist;\n}\n\nmsg.payload = getRegisters(msg.N_REGISTERS)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 380,
        "wires": [
            [
                "6996f41d562c1c86"
            ]
        ]
    },
    {
        "id": "74ae70a3466afb83",
        "type": "change",
        "z": "312a30f75a737290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "N_REGISTERS",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 380,
        "wires": [
            [
                "47574816aa724892",
                "c5139c7dcf549f60"
            ]
        ]
    },
    {
        "id": "7de0c65d7781a002",
        "type": "function",
        "z": "312a30f75a737290",
        "name": "Get Registers",
        "func": "function getRegisters(n_registers) {\n    let mylist = [];\n    for (let k = 0; k < n_registers; k++) {\n        (msg.payload[0] << 8) + msg.payload[1]\n        mylist.push((msg.payload[k*2] << 8) + msg.payload[k*2+1]);\n    }\n    return mylist;\n}\n\nmsg.payload = getRegisters(msg.N_REGISTERS)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 140,
        "wires": [
            [
                "4365dd5758fca83b",
                "0577dcf6d03fa48e"
            ]
        ]
    },
    {
        "id": "114de816ca7c007a",
        "type": "change",
        "z": "312a30f75a737290",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "N_REGISTERS",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 140,
        "wires": [
            [
                "7de0c65d7781a002",
                "a7ec915b5714f0ad"
            ]
        ]
    },
    {
        "id": "a7ec915b5714f0ad",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "holding orig",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1230,
        "y": 80,
        "wires": []
    },
    {
        "id": "c5139c7dcf549f60",
        "type": "debug",
        "z": "312a30f75a737290",
        "name": "input orig",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 320,
        "wires": []
    },
    {
        "id": "e5acb109532db908",
        "type": "ha-binary-sensor",
        "z": "312a30f75a737290",
        "name": "Modbus Binary Sensor",
        "entityConfig": "3951aec4719e36ae",
        "version": 0,
        "state": "payload[0]",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 1480,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0bb0be711b71d5d1",
        "type": "ha-entity-config",
        "server": "dd34a0b0.8b57b",
        "deviceConfig": "",
        "name": "Modbus Temperature",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "modbus_temperature"
            },
            {
                "property": "icon",
                "value": "mdi:gauge"
            },
            {
                "property": "entity_category",
                "value": "diagnostic"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "device_class",
                "value": "temperature"
            },
            {
                "property": "unit_of_measurement",
                "value": "°C"
            },
            {
                "property": "state_class",
                "value": "measurement"
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "dd34a0b0.8b57b",
        "type": "server",
        "name": "Home Assistant",
        "addon": true
    },
    {
        "id": "3951aec4719e36ae",
        "type": "ha-entity-config",
        "server": "c0bed271.c7dfe",
        "deviceConfig": "",
        "name": "Modbus Binary Sensor",
        "version": "6",
        "entityType": "binary_sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "modbus_binary_sensor"
            },
            {
                "property": "icon",
                "value": "mdi:gesture-tap-button"
            },
            {
                "property": "entity_category",
                "value": "diagnostic"
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "c0bed271.c7dfe",
        "type": "server",
        "name": "Home Assistant",
        "addon": true
    }
]